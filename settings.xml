<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="4f9acf67-e6d6-470c-9fd7-559757c59bb8" created="3.40.2" activeEnvironment="Default environment" name="SampleUserProject" updated="3.40.2" encryptionMode="Not encrypted" resourceRoot="" compositeProjectFormat="1.3" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerUIAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Settings File Password" value=""/>
  <con:entry key="Report Format(s)" value="XML"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Slack Channel(s)" value=""/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Test Suite Tags" value=""/>
  <con:entry key="Select Report Type" value="Test suite printable report"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Test Suite" value="UserAPI"/>
  <con:entry key="Run in-process" value="false"/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Test Case Tags" value=""/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Test Case" value="&lt;all>"/>
  <con:entry key="Slack Access Token" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Username" value=""/>
  <con:entry key="TestRunner Path" value="/Applications/ReadyAPI-3.40.2.app/Contents/Resources/app/bin"/>
  <con:entry key="Environment" value="No Environment"/>
  <con:entry key="Coverage Report" value="true"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting>
    <con:setting id="IncludeOverview">true</con:setting>
    <con:setting id="IncludeResults">true</con:setting>
    <con:setting id="FlowLayout">false</con:setting>
    <con:setting id="ErrorDetails">true</con:setting>
    <con:setting id="IncludeCoverage">true</con:setting>
  </con:settings>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer>
    <con:databaseConnection>
      <con:name>postgresql</con:name>
      <con:driver>org.postgresql.Driver</con:driver>
      <con:connectionString>jdbc:postgresql://localhost:5432/postgres?user=ashwini.lohar&amp;password=PASS_VALUE</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
    </con:databaseConnection>
    <con:databaseConnection>
      <con:name>mysql</con:name>
      <con:driver>com.mysql.jdbc.Driver</con:driver>
      <con:connectionString>jdbc:mysql://127.0.0.1:3306/mysql?user=root&amp;password=PASS_VALUE</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
    </con:databaseConnection>
    <con:databaseConnection>
      <con:name>mysql</con:name>
      <con:driver>com.mysql.jdbc.Driver</con:driver>
      <con:connectionString>jdbc:mysql://127.0.0.1:3306/mysql?user=root&amp;password=PASS_VALUE</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
    </con:databaseConnection>
  </con:databaseConnectionContainer>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting/>
  <con:beforeRunScript>import groovy.sql.Sql

log.info "Establishing a Postgres Database Connection with RedayAPI" 

def dbUrl      = "jdbc:postgresql://localhost/postgres"
def dbUser     = "ashwini.lohar"
def dbDriver   = "org.postgresql.Driver"

// Register the Postgres JDBC driver â€“ required for Groovy to send requests to the database
 com.eviware.soapui.support.GroovyUtils.registerJdbcDriver(dbDriver)

// Connect to the SQL instance
def sql = Sql.newInstance(dbUrl, dbUser, dbDriver)

def query = "select email, password from credentials"
  def credentials = sql.firstRow(query)
    log.info credentials

log.info "DB is successfully Connected"

 log.info "Connect to virtual service to connect virtual APIs"   
    
virtRunner.run("UserAPI_VS")</con:beforeRunScript>
  <con:afterRunScript>import groovy.sql.Sql

def dbUrl      = "jdbc:postgresql://localhost/postgres"
def dbUser     = "ashwini.lohar"
def dbDriver   = "org.postgresql.Driver"

def sql = Sql.newInstance(dbUrl, dbUser, dbDriver)

sql.close()
log.info "Database successfully closed"

virtRunner.stop("UserAPI_VS")
log.info "Virtual Service is closed "</con:afterRunScript>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestSuiteRunListener.beforeTestCase" name="TestSuiteRunListener.beforeTestCase" target="TC_*">
    <con:script disabled="true">log.info "hii"</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
